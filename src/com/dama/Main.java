package com.dama;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Main {

    public static void main(String[] args) {

        ArrayList<Poi> pois = new ArrayList<Poi>();

        // Adding example POIs
        pois.add(new Poi("1228",41.3582863888889,1.98555497222222,1.071500462609837810842,45));
        pois.add(new Poi("142",41.380573,2.170374,1.0226352416326089006933,45));
        pois.add(new Poi("1155",41.3647776388889,2.15257502777778,0.9492961108275586664858,45));
        pois.add(new Poi("205",41.378864,2.174117,0.9233420967003482566011,45));
        pois.add(new Poi("398",41.407215,2.214539,0.9112400667271195467048,45));
        pois.add(new Poi("975",41.40205,2.21529,0.887575121952868456074,45));
        pois.add(new Poi("230",41.395271,2.161785,0.875461113613918228113,45));
        pois.add(new Poi("667",41.36882,2.153347,0.8662620850333555307264,45));
        pois.add(new Poi("470",41.380852,2.185799,0.8435596210701236669254,45));
        pois.add(new Poi("228",41.389248,2.186548,0.8369478904631378023212,45));
        pois.add(new Poi("891",41.382812,2.178195,0.8359267847127004286224,45));
        pois.add(new Poi("425",41.391556,2.197416,0.8162579683864020667817,45));
        pois.add(new Poi("436",41.379158,2.192717,0.8123688312451524313095,45));
        pois.add(new Poi("472",41.376625,2.184117,0.7971431153497817392677,45));
        pois.add(new Poi("82",41.387554,2.17554,0.7883110848570788505394,45));
        pois.add(new Poi("973",41.394341,2.2066,0.7725692920623401825411,45));
        pois.add(new Poi("646",41.363823,2.167096,0.7714574979479849857823,45));
        pois.add(new Poi("933",41.390739,2.166672,0.7700726028941891965625,45));
        pois.add(new Poi("676",41.368679,2.147031,0.7587892128029988410156,45));
        pois.add(new Poi("953",41.424667,2.139856,0.7385574063080987645526,45));
        pois.add(new Poi("509",41.41935,2.146432,0.7025758536957329385092,45));
        pois.add(new Poi("6",41.384178,2.176819,0.6969025857970963423707,45));
        pois.add(new Poi("508",41.414249,2.151926,0.6918199688041046361079,45));
        pois.add(new Poi("106",41.383518,2.1818,0.6565676966073492762232,45));
        pois.add(new Poi("1001",41.419388,2.161812,0.6545776972759535427268,45));
        pois.add(new Poi("81",41.385181,2.180863,0.6537048403785426627762,45));
        pois.add(new Poi("909",41.378681,2.169317,0.6484741837097378590578,45));
        pois.add(new Poi("372",41.403568,2.174435,0.6444139874712940676368,45));
        pois.add(new Poi("636",41.363441,2.152537,0.6419986913432869675026,45));
        pois.add(new Poi("889",41.3857751666667,2.17367072222222,0.6340049443614819554213,45));
        pois.add(new Poi("421",41.394859,2.201189,0.6338075113034215618702,45));
        pois.add(new Poi("978",41.373009,2.189541,0.6323997206248743680307,45));
        pois.add(new Poi("1227",41.0864267222222,1.15315255555556,0.6191091645056532665621,45));
        pois.add(new Poi("435",41.375286,2.17598,0.6157370214126676756599,45));
        pois.add(new Poi("932",41.387005,2.17003,0.6141237418660427171555,45));
        pois.add(new Poi("25",41.383835,2.178294,0.6076169154704081098786,45));
        pois.add(new Poi("955",41.432961,2.165669,0.6047825912849173312138,45));
        pois.add(new Poi("255",41.391758,2.164961,0.6040702874278491115916,45));
        pois.add(new Poi("911",41.387653,2.188076,0.5985822004805903960741,45));
        pois.add(new Poi("32",41.384144,2.177409,0.5948266881022139892132,45));
        pois.add(new Poi("375",41.398621,2.185367,0.5887573167012532377171,45));
        pois.add(new Poi("504",41.403442,2.150684,0.5857459622056266502022,45));
        pois.add(new Poi("4",41.383327,2.174488,0.5834712792598761662134,45));
        pois.add(new Poi("972",41.390316,2.201922,0.5699134489198409311308,45));
        pois.add(new Poi("920",41.376385,2.179861,0.5618092441686082138036,45));
        pois.add(new Poi("974",41.398445,2.211921,0.5608241372712440842465,45));
        pois.add(new Poi("930",41.394924,2.175599,0.5598177540766773373912,45));
        pois.add(new Poi("931",41.39555,2.1652,0.5595978145917815381391,45));
        pois.add(new Poi("981",41.383797,2.195914,0.555005080069009199819,45));
        pois.add(new Poi("924",41.397072,2.160723,0.5510282330491897303723,45));
        pois.add(new Poi("954",41.451843,2.178289,0.5487785576230039922697,45));
        pois.add(new Poi("422",41.387707,2.19939,0.5478835621501023121838,45));
        pois.add(new Poi("107",41.385818,2.183785,0.5419081351544801363337,45));
        pois.add(new Poi("918",41.380924,2.182465,0.5377895678936946469414,45));
        pois.add(new Poi("227",41.386299,2.187545,0.5370804735655128673436,45));
        pois.add(new Poi("971",41.40192,2.200141,0.5333078865309969471023,45));
        pois.add(new Poi("1132",41.400425,2.149986,0.5317110098647379311222,45));
        pois.add(new Poi("631",41.364746,2.159382,0.522287606388757812531,45));
        pois.add(new Poi("226",41.384144,2.177409,0.5196580475729424132615,45));
        pois.add(new Poi("635",41.364746,2.155624,0.5191689592936082750738,45));
        pois.add(new Poi("901",41.383713,2.18243,0.5154555630313201682594,45));
        pois.add(new Poi("961",41.399937,2.121871,0.512946737637612377699,45));
        pois.add(new Poi("1504",412357.651,3.50763,0.5127012924247508749702,45));
        pois.add(new Poi("925",41.39119,2.165511,0.5095150870691734771588,45));
        pois.add(new Poi("923",41.390972,2.173002,0.5092501274214534221637,45));
        pois.add(new Poi("768",41.422001,2.119771,0.5049006813228455236231,45));
        pois.add(new Poi("707",41.3993,2.110373,0.5037095382032114033482,45));
        pois.add(new Poi("668",41.37117,2.151732,0.4996037551605042767785,45));
        pois.add(new Poi("941",41.393375,2.184021,0.4871454463871992856584,45));
        pois.add(new Poi("1139",41.394596,2.149034,0.4868388252256201571276,45));


        TopSolver topSolver = new TopSolver(4,300.0,65.0,pois,41.375128,2.16835,41.375128,2.16835);

        ArrayList<ArrayList<String>> solutionRoutes = topSolver.run(10,10);

    }
}
